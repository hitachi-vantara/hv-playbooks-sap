###################################################################
# Example : VVOL LDEV  Creation in DP Pool Playbook
####################################################################
- name: Logical Device Module
  hosts: localhost
  gather_facts: false
  collections:
    - hitachivantara.vspone_block.vsp

  vars_files:
    - ../../ansible_vault_vars/ansible_vault_storage_var.yml
    - vsp_direct_variables_create.yml

  vars:
    # Common connection info for all tasks
    connection_info:
      address: "{{ storage_address }}"
      username: "{{ vault_storage_username }}"
      password: "{{ vault_storage_secret }}"

  tasks:
########################################################################
# Task 8 : Create ldev (VVOL) for OS, Shared, Log and Data using pool id
########################################################################
    - name: Create vvol ldev for OS, SHARED, 4 x LOG & 4 x DATA using pool id
      block:
        - name: Create OS, Shared, and 4 Data VVOLs in "{{ storagepool_name_1 }}"
          hitachivantara.vspone_block.vsp.hv_ldev:
            connection_info: "{{ connection_info }}"
            storage_system_info:
              serial: "{{ storage_serial }}"
            state: "{{ state_present }}"
            spec:
              pool_id: "{{ dp_pool_id_1 }}"
              size: "{{ item.size }}"
              name: "{{ item.name }}"
          loop: "{{ os_vvols + shared_vvols + data_vvols }}"
          loop_control:
            loop_var: item
          register: vvol_create_result_1

        - name: Create 4 LOG VVOLs in "{{ storagepool_name_2 }}"
          hitachivantara.vspone_block.vsp.hv_ldev:
            connection_info: "{{ connection_info }}"
            storage_system_info:
              serial: "{{ storage_serial }}"
            state: "{{ state_present }}"
            spec:
              pool_id: "{{ dp_pool_id_2 }}"
              size: "{{ item.size }}"
              name: "{{ item.name }}"
          loop: "{{ log_vvols }}"
          loop_control:
            loop_var: item
          register: vvol_create_result_2

      vars:
        # OS VVOL
        os_vvols:
          - { size: "{{ os_vvol_size }}", name: "{{ os_vvol_name }}" }

        # Shared VVOL
        shared_vvols:
          - { size: "{{ shared_vvol_size }}", name: "{{ shared_vvol_name }}" }

        # Define a range for 4 Log VVOLs
        log_vvols: |
          [
            {% for i in range(1, 5) %}
            { "size": "{{ log_vvol_size }}", "name": "{{ log_vvol_name }}_{{ i }}" }
            {% if not loop.last %},{% endif %}
            {% endfor %}
          ]

        # Define a range for 4 Data VVOLs
        data_vvols: |
          [
            {% for i in range(1, 5) %}
            { "size": "{{ data_vvol_size }}", "name": "{{ data_vvol_name }}_{{ i }}" }
            {% if not loop.last %},{% endif %}
            {% endfor %}
          ]

          #register: vvol_create_result

        #- debug:
        #var: vvol_create_result


####################################################################
# Task 9 : Present ldev to host group with direct connection
####################################################################

    - name: Reorder vvol creation results (OS, Shared, LOG, DATA)
      ansible.builtin.set_fact:
        reordered_vvol_results: "{{ vvol_create_result_1.results[0:2] + vvol_create_result_2.results + vvol_create_result_1.results[2:] }}"


    - name: Collect ldev_ids in desired order
      ansible.builtin.set_fact:
        ordered_ldev_ids: "{{ reordered_vvol_results | selectattr('volume.ldev_id', 'defined') | map(attribute='volume.ldev_id') | list }}"

    - name: Show ordered ldev_ids
      ansible.builtin.debug:
        var: ordered_ldev_ids

    - name: Present ldev to host group with direct connection
      hitachivantara.vspone_block.vsp.hv_hg:
        connection_info: "{{ connection_info }}"
        state: "{{ state_present }}"
        spec:
          state: "{{ substate_present_ldev }}"
          name: "{{ item.hostgroup_port[2:5] | replace('-', '') }}-G00"
          port: "{{ item.hostgroup_port }}"
          ldevs: "{{ ordered_ldev_ids }}"
      loop: "{{ hostgroups }}"
      register: result_present_ldev

        #- name: Debug result_present_ldev
        #ansible.builtin.debug:
        #var: result_present_ldev
